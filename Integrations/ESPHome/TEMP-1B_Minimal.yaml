esphome:
  name: "apollo-temp-1b-minimal"
  friendly_name: Apollo TEMP-1B Minimal
  comment: Apollo TEMP-1B Minimal
  name_add_mac_suffix: true
  platformio_options:
    board_build.flash_mode: dio

  project:
    name: "ApolloAutomation.TEMP-1B_Minimal"
    version: "${version}"

  min_version: 2025.6.0
  on_boot:
    priority: 500
    then:
      - lambda: |-
          id(deep_sleep_1).set_sleep_duration(id(deep_sleep_sleep_duration).state * 60 * 60 * 1000);
      - if:
          condition:
            or:
              - binary_sensor.is_on: ota_mode
              - switch.is_on: prevent_sleep
          then:
             - lambda: |- 
                ESP_LOGW("Apollo", "Preventing Deep Sleep Due To OTA On Boot");
                id(deep_sleep_1).prevent_deep_sleep(); 

      - if:
          condition:
            switch.is_on: notify_only_outside_temp_difference
          then:
            - logger.log: "Apollo Automation: Notify Only Outside Temp Difference"
            - switch.turn_on: accessory_power
            - delay: 5s
            - lambda: |-
                id(reportAllValues).execute();
            - delay: 5s          
            - if: # Check If Temp Probe Is Outside Threshold
                condition:
                  - lambda: |-
                      // Determine the selected probe
                      std::string selected_probe = id(temp_probe_select).state.c_str();
                      float current_temp;

                      if (selected_probe == "Temperature") {
                        current_temp = id(temp_probe).state;
                      } else {
                        current_temp = id(ntc_sensor).state;
                      }

                      // Check temperature difference
                      if (std::abs(current_temp - id(last_temp)) > id(temp_diff_threshold)->state) {
                        return true;
                        id(last_temp) = current_temp;
                      } else {
                        return false;
                      }
                then: # If So Then Turn On Wifi To Update
                  - logger.log: "Apollo Automation: Outside Temp Change Detected"
                  - lambda: |-
                      id(last_temp) = id(temp_probe).state;
                else: # If Not Then Check OTA And Sleep
                  - if:
                      condition:
                        and:
                          - binary_sensor.is_off: ota_mode
                          - switch.is_off: prevent_sleep
                      then:
                      - deep_sleep.enter:
                          id: deep_sleep_1
                  
  on_shutdown:
    - light.turn_off: rgb_light

dashboard_import:
  package_import_url: github://ApolloAutomation/TEMP-1/Integrations/ESPHome/TEMP-1B_Minimal.yaml
  import_full_config: false

safe_mode:

ota:
  - platform: esphome
    id: ota_esphome

web_server:
  port: 80

wifi:
  id: wifi_1
  ap:
    ssid: "Apollo TEMP1B Hotspot"

logger:

packages:
  core: !include Core.yaml
  battery: !include Battery.yaml
  100Resistance: !include 100Resistance.yaml
